
@inproceedings{cramer_representation_1985,
	address = {Carnegie-Mellon University, Pittsburgh, PA, USA},
	title = {A {Representation} for the {Adaptive} {Generation} of {Simple} {Sequential} {Programs}},
	shorttitle = {{ICGA} 1985},
	abstract = {An adaptive system for generating short sequential computer functions is described. The created functions are written in the simple "number-string" language JB, and in TB, a modified version of JB with a tree-like structure. These languages have the feature that they can be used to represent well-formed, useful computer programs while still being amenable to suitably defined genetic operators. The system is used to produce two-input, single-output multiplication functions that are concise and well-defined. Future work, dealing with extensions to more complicated functions and generalizations of the techniques, is also discussed.},
	booktitle = {Proceedings of an {International} {Conference} {On} {Genetic} {Algorithms} {And} {Their} {Applications}},
	publisher = {Lawrence Erlbaum Associates},
	author = {Cramer, Nichael Lynn},
	month = jul,
	year = {1985},
	keywords = {algorithm, evolution, ga, Genetic programming, gp, history, induction, optimization, programming},
	pages = {183--187},
	file = {Cramer - 1985 - A Representation for the Adaptive Generation of Si.pdf:/Users/cwr/Zotero/storage/DNLKQ4TB/Cramer - 1985 - A Representation for the Adaptive Generation of Si.pdf:application/pdf},
}

@misc{guo_ganmouflage_2022,
	title = {GANmouflage: 3D Object Nondetection with Texture Fields},
	shorttitle = {{GANmouflage}},
	url = {http://arxiv.org/abs/2201.07202},
	abstract = {We propose a method that learns to camouflage 3D objects within scenes. Given an object's shape and a distribution of viewpoints from which it will be seen, we estimate a texture that will make it difficult to detect. Successfully solving this task requires a model that can accurately reproduce textures from the scene, while simultaneously dealing with the highly conflicting constraints imposed by each viewpoint. We address these challenges with a model based on texture fields and adversarial learning. Our model learns to camouflage a variety of object shapes from randomly sampled locations and viewpoints within the input scene, and is the first to address the problem of hiding complex object shapes. Using a human visual search study, we find that our estimated textures conceal objects significantly better than previous methods. Project site: https://rrrrrguo.github.io/ganmouflage/},
	urldate = {2022-01-23},
	journal = {arXiv:2201.07202 [cs]},
	author = {Guo, Rui and Collins, Jasmine and de Lima, Oscar and Owens, Andrew},
    month = {jan},
	year = {2022},
	note = {arXiv: 2201.07202},
	keywords = {camouflage, cocish, 3d, texture\_synthesis, human, detection, Computer Science - Computer Vision and Pattern Recognition, anti\_camouflage, multi\_view},
	file = {arXiv Fulltext PDF:/Users/cwr/Zotero/storage/VKQU27CT/Guo et al. - 2022 - GANmouflage 3D Object Nondetection with Texture F.pdf:application/pdf;arXiv.org Snapshot:/Users/cwr/Zotero/storage/VPPJU2P2/2201.html:text/html},
    numpages = {16},
    eprinttype = {arXiv},
    eprint={2201.07202},
}

@inproceedings{harrington_coevolution_2014,
	author = {Harrington, Kyle I. and Freeman, Jesse and Pollack, Jordan},
    title = "{Coevolution in Hide and Seek: Camouflage and Vision}",
    booktitle = {ALIFE 14: The Fourteenth International Conference on the Synthesis and Simulation of Living Systems},
    address = {New York City, NY, USA},
    pages = {25-32},
    year = {2014},
    month = {07},
    publisher = {MIT Press},
    url = {https://direct.mit.edu/isal/proceedings/alife2014/25/98754},
}

@book{koza_genetic_1992,
	address = {Cambridge, Mass.},
	edition = {1},
	title = {Genetic {Programming}: {On} the {Programming} of {Computers} by {Means} of {Natural} {Selection} ({Complex} {Adaptive} {Systems})},
	isbn = {0-262-11170-5},
	url = {https://mitpress.mit.edu/9780262527910/genetic-programming/},
	publisher = {MIT Press, A Bradford Book},
	author = {Koza, John R.},
	month = dec,
	year = {1992},
	keywords = {evolution, gp},
}

@article{Mckay_2010,
    author = {Mckay, Robert I. and Hoai, Nguyen Xuan and Whigham, Peter Alexander and Shan, Yin and O'Neill, Michael},
    title = {Grammar-Based Genetic Programming: A Survey},
    year = {2010},
    issue_date = {September 2010},
    publisher = {Kluwer Academic Publishers},
    address = {USA},
    volume = {11},
    number = {3–4},
    issn = {1389-2576},
    url = {https://doi.org/10.1007/s10710-010-9109-y},
    doi = {10.1007/s10710-010-9109-y},
    abstract = {Grammar formalisms are one of the key representation structures in Computer Science. So it is not surprising that they have also become important as a method for formalizing constraints in Genetic Programming (GP). Practical grammar-based GP systems first appeared in the mid 1990s, and have subsequently become an important strand in GP research and applications. We trace their subsequent rise, surveying the various grammar-based formalisms that have been used in GP and discussing the contributions they have made to the progress of GP. We illustrate these contributions with a range of applications of grammar-based GP, showing how grammar formalisms contributed to the solutions of these problems. We briefly discuss the likely future development of grammar-based GP systems, and conclude with a brief summary of the field.},
    journal = {Genetic Programming and Evolvable Machines},
    month = {sep},
    pages = {365–396},
    numpages = {32},
    keywords = {Regular, Tree adjoining, Evolutionary computation, Grammar, Genetic programming, Context free}
}

@article{montana_strongly_1995,
	title = {Strongly {Typed} {Genetic} {Programming}},
	volume = {3},
	url = {http://web.archive.org/web/20070814014654/http://vishnu.bbn.com/papers/stgp.pdf},
	abstract = {Genetic programming is a powerful method for automatically generating computer programs via the process of natural selection (Koza, 1992). However, in its standard form, there is no way to restrict the programs it generates to those where the functions operate on appropriate data types. In the case when the programs manipulate multiple data types and contain functions designed to operate on particular data types, this can lead to unnecessarily large search times and/or unnecessarily poor generalization performance. Strongly typed genetic programming (STGP) is an enhanced version of genetic programming which enforces data type constraints and whose use of generic functions and generic data types makes it more powerful than other approaches to type constraint enforcement. After describing its operation, we illustrate its use on problems in two domains, matrix/vector manipulation and list manipulation, which require its generality. The examples are: (1) the multi-dimensional least-squares regression problem, (2) the multi-dimensional Kalman ﬁlter, (3) the list manipulation function NTH, and (4) the list manipulation function MAPCAR.},
	number = {2},
	journal = {Evolutionary Computation},
	author = {Montana, David J.},
	year = {1995},
	keywords = {self\_organizing, evolution, algorithm, emergence, optimization, gp},
	pages = {199--230},
	annote = {See also July 1993 BBN Technical Report \#7866 of the same name – http://www.citeulike.org/user/numata/article/219660},
}

@INPROCEEDINGS{owens_camouflaging_2014,
  author={Owens, Andrew and Barnes, Connelly and Flint, Alex and Singh, Hanumant and Freeman, William},
  booktitle={2014 IEEE Conference on Computer Vision and Pattern Recognition}, 
  title={Camouflaging an Object from Many Viewpoints}, 
  year={2014},
  volume={},
  number={},
  address={Columbus, OH, USA},
  publisher = {IEEE CVPR},
  pages={2782-2789},
  doi={10.1109/CVPR.2014.350}}

@article{perlin_image_1985,
	title = {An image synthesizer},
	volume = {19},
	issn = {0097-8930},
	url = {http://dx.doi.org/10.1145/325334.325247},
	doi = {10.1145/325334.325247},
	abstract = {We introduce the concept of a Pixel Stream Editor. This forms the basis for an interactive synthesizer for designing highly realistic Computer Generated Imagery. The designer works in an interactive Very High Level programming environment which provides a very fast concept/implement/view iteration cycle. Naturalistic visual complexity is built up by composition of non-linear functions, as opposed to the more conventional texture mapping or growth model algorithms. Powerful primitives are included for creating controlled stochastic effects. We introduce the concept of "solid texture" to the field of CGI.We have used this system to create very convincing representations of clouds, fire, water, stars, marble, wood, rock, soap films and crystal. The algorithms created with this paradigm are generally extremely fast, highly realistic, and asynchronously parallelizable at the pixel level.},
	number = {3},
	journal = {SIGGRAPH '85: Proceedings of the 12th annual conference on Computer graphics and interactive techniques},
	author = {Perlin, Ken},
	month = jul,
	year = {1985},
	keywords = {noise, pattern, texture\_synthesis},
	pages = {287--296},
}

@article{Reynolds2011,
    author = {Reynolds, Craig},
    title = "{Interactive Evolution of Camouflage}",
    journal = {Artificial Life},
    volume = {17},
    number = {2},
    pages = {123-136},
    year = {2011},
    month = {04},
    abstract = "{This article presents an abstract computation model of the evolution of camouflage in nature. The 2D model uses evolved textures for prey, a background texture representing the environment, and a visual predator. A human observer, acting as the predator, is shown a cohort of 10 evolved textures overlaid on the background texture. The observer clicks on the five most conspicuous prey to remove (“eat”) them. These lower-fitness textures are removed from the population and replaced with newly bred textures. Biological morphogenesis is represented in this model by procedural texture synthesis. Nested expressions of generators and operators form a texture description language. Natural evolution is represented by genetic programming (GP), a variant of the genetic algorithm. GP searches the space of texture description programs for those that appear least conspicuous to the predator.}",
    issn = {1064-5462},
    doi = {10.1162/artl_a_00023},
    url = {https://doi.org/10.1162/artl\_a\_00023},
    eprint = {},
}

@inproceedings{Zhang2022,
    author = {Zhang, Miao and Xu, Shuang and Piao, Yongri and Shi, Dongxiang and Lin, Shusen and Lu, Huchuan},
    title = {PreyNet: Preying on Camouflaged Objects},
    year = {2022},
    isbn = {9781450392037},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA}, url = {https://doi.org/10.1145/3503161.3548178},
    doi = {10.1145/3503161.3548178},
    abstract = {Species often adopt various camouflage strategies to be seamlessly blended into the surroundings for self-protection. To figure out the concealment, predators have evolved excellent hunting skills. Exploring the intrinsic mechanisms of the predation behavior can offer more insightful glimpse into the task of camouflaged object detection (COD). In this work, we strive to seek answers for accurate COD and propose a PreyNet, which mimics the two processes of predation, namely, initial detection (sensory mechanism) and predator learning (cognitive mechanism). To exploit the sensory process, a bidirectional bridging interaction module (BBIM) is designed for selecting and aggregating initial features in an attentive manner. The predator learning process is formulated as a policy-and-calibration paradigm, with the goal of deciding on uncertain regions and encouraging targeted feature calibration. Besides, we obtain adaptive weight for multi-layer supervision during training via computing on the uncertainty estimation. Extensive experiments demonstrate that our model produces state-of-the-art results on several benchmarks. We further verify the scalability of the predator learning paradigm through applications on top-ranking salient object detection models. Our code is publicly available at urlhttps://github.com/OIPLab-DUT/PreyNet.},
    booktitle = {Proceedings of the 30th ACM International Conference on Multimedia},
    pages = {5323–5332},
    numpages = {10},
    keywords = {camouflaged object detection, sensory mechanism, predator learning},
    location = {Lisboa, Portugal},
    series = {MM '22}
}